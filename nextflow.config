params.version          = 2.0

// input and mode:
params.fastq            = ''
params.mode             = 'paired' // single || paired
params.publishmode      = 'copy'
params.outdir           = "$launchDir/atac_chip_preprocess_results/"

// Indexing with bowtie2-build:
params.idx              = ''
params.idx_threads      = 1
params.idx_mem          = '8G'
params.idx_additional   = ''
params.idx_name         = "$params.outdir/bowtie2_idx"
params.only_idx         = false // true for indexing and then exit))

// alignment:
params.skip_align       = false
params.trim_adapter     = ''
params.trim_additional  = ''
params.align_threads    = 1
params.align_mem        = "8.GB"
params.align_additional = '--very-sensitive'
params.align_dir        = "$params.outdir/bam_raw/"   
params.sort_threads     = 1
params.sort_mem         = '1G' // must be in the form that samtools sort -@ recognizes and in Giga, and currently expected as integer
params.sort_additional  = ''

// post-alignment filtering:
params.skip_bamfilter           = false
params.bamfilter_dir            = "$params.outdir/bam_filtered/"   
params.bamfilter_additional     = ''    
params.bamfilter_mapq           = 20   
params.bamfilter_keepchr        = 'chr[1-9,X,Y,EBV]' 
params.bamfilter_flag_keep      = ''    // there are defaults for single- and paired-end data, see README, or none
params.bamfilter_flag_remove    = ''    // there are defaults for single- and paired-end data, see README, or none
params.bamfilter_threads        = 1     

// collect insertsize metrics with Picard:
params.skip_isizes              = false
params.isizes_mem               = '4.GB'
params.isizes_dir               = "$params.outdir/insert_sizes/"   

// in ATAC-seq mode cutsites BED file:
params.atacseq                  = false
params.skip_cutsites            = false
params.cutsites_threads         = 3         // must be at least 3, is set to 3 if smaller than this
params.cutsites_mem             = '4G'      // for sort via GNU sort, in syntax correct for -S option, will be increased by 10% internally
params.cutsites_dir             = "$params.outdir/bed_cutsites/"   

// peak calling:
params.skip_macs                = false
params.macs_additional          = ''
params.macs_gflag               = '-g mm'
params.macs_format              = ''
params.macs_suffix              = ''
params.macs_control             = '' 
params.macs_dir                 = "$params.outdir/macs2/"   
params.macs_mem                 = '4.GB'
params.frips_threads            = 1
params.frips_additional         = '' // leave as-is, set automatically
params.frips_mem                = '4.GB'
params.frips_dir                = "$params.outdir/frips/"   
params.skip_qc                  = false

// cluster submission
params.queue                    = 'normal'          // SLURM queue on our HPC
params.clusteroptions           = '--time=08:00:00' // other arguments when submitting to a cluster:

// container
params.container                = 'atpoint/atac_chip_preprocess:v1.1.1'

// easy way to check whether testing mode is on:
params.testing                  = false

profiles {

    test_index {

        params.ref_genome       = "$baseDir/test/genome.fa.gz"
        params.idx_threads      = 1
        params.idx_mem          = '1G'
        params.idx_additional   = ''
        params.skip_align       = true
        params.skip_bamfilter   = true
        params.testing          = true

    }

    test_paired {

        params.mode             = 'paired'
        params.idx              = "$baseDir/test/example_index/idx"
        params.fastq            = "$baseDir/test/*_{1,2}.fastq.gz"
        params.sort_threads     = 0 // this is just to get GitHub Actions running
        params.cutsites_threads = 1 // this is just to get GitHub Actions running
        params.align_mem        = '1.GB'
        params.sort_mem         = '1G'
        params.isizes_mem       = '1.GB'
        params.cutsites_mem     = '1G'
        params.frips_mem        = '1.GB'
        params.testing          = true

    }

    test_single {

        params.mode             = 'single'
        params.idx              = "$baseDir/test/example_index/idx"
        params.fastq            = "$baseDir/test/*_1.fastq.gz"
        params.sort_threads     = 0 // this is just to get GitHub Actions running
        params.cutsites_threads = 1 // this is just to get GitHub Actions running
        params.macs_additional  = '--nomodel --extsize 100 --shift -50 --keep-dup=all --min-length 150 -q 0.005' // tweaking to get some peaks if running in non-atac single-end mode
        params.align_mem        = '1.GB'
        params.sort_mem         = '1G'
        params.isizes_mem       = '1.GB'
        params.cutsites_mem     = '1G'
        params.frips_mem        = '1.GB'
        params.testing          = true

    }

    conda {
        process.conda           = "${baseDir}/environment.yml"
        conda.enabled           = true
    }

    docker {
        process.container       = params.container
        docker.enabled          = true        
    }

    singularity {
        process.container       = "docker://${params.container}"
        singularity.enabled     = true
        singularity.autoMounts  = true
    }

    // submission on HPC:
    slurm {
        process.executor        = 'slurm'
        process.queue           = params.queue
        process.clusterOptions  = "${params.clusteroptions}"
    }

}
